<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>de.rub.nds.tls.anvil</groupId>
        <artifactId>tls-anvil</artifactId>
        <version>1.3.1-SNAPSHOT</version>
    </parent>
    <artifactId>tls-test-framework</artifactId>

    <name>TLS-Test-Framework</name>

    <scm>
        <connection>scm:git:https://github.com/tls-attacker/TLS-Anvil.git</connection>
        <developerConnection>scm:git:ssh://git@github.com/tls-attacker/TLS-Anvil-Development.git</developerConnection>
        <tag>v1.3.0</tag>
        <url>https://github.com/tls-attacker/TLS-Anvil</url>
    </scm>

    <properties>
        <main.basedir>${project.parent.basedir}</main.basedir>
    </properties>

    <dependencies>
        <!-- scope: compile -->
        <dependency>
            <groupId>com.beust</groupId>
            <artifactId>jcommander</artifactId>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
        </dependency>
        <dependency>
            <groupId>com.github.docker-java</groupId>
            <artifactId>docker-java</artifactId>
            <version>${deps.docker-java.version}</version>
        </dependency>
        <dependency>
            <groupId>de.rub.nds</groupId>
            <artifactId>anvil-core</artifactId>
            <version>${toolkit.common.anvilcore.version}</version>
        </dependency>
        <dependency>
            <groupId>de.rub.nds</groupId>
            <artifactId>modifiable-variable</artifactId>
            <version>${toolkit.common.modifiableVariable.version}</version>
        </dependency>
        <dependency>
            <groupId>de.rub.nds</groupId>
            <artifactId>protocol-attacker</artifactId>
            <version>${toolkit.common.protocolattacker.version}</version>
        </dependency>
        <dependency>
            <groupId>de.rub.nds</groupId>
            <artifactId>scanner-core</artifactId>
            <version>${toolkit.common.scannercore.version}</version>
        </dependency>
        <dependency>
            <groupId>de.rub.nds</groupId>
            <artifactId>x509-attacker</artifactId>
            <version>${toolkit.common.x509attacker.version}</version>
        </dependency>
        <dependency>
            <groupId>de.rub.nds.tls</groupId>
            <artifactId>coffee4j-anvil-engine</artifactId>
            <version>${toolkit.common.coffee4j.anvil.version}</version>
        </dependency>
        <dependency>
            <groupId>de.rub.nds.tls</groupId>
            <artifactId>coffee4j-anvil-junit-jupiter</artifactId>
            <version>${toolkit.common.coffee4j.anvil.version}</version>
        </dependency>
        <dependency>
            <groupId>de.rub.nds.tls</groupId>
            <artifactId>coffee4j-anvil-model</artifactId>
            <version>${toolkit.common.coffee4j.anvil.version}</version>
        </dependency>
        <dependency>
            <groupId>de.rub.nds.tls.attacker</groupId>
            <artifactId>tls-core</artifactId>
            <version>${toolkit.tls.attacker.version}</version>
        </dependency>
        <dependency>
            <groupId>de.rub.nds.tls.attacker</groupId>
            <artifactId>transport</artifactId>
            <version>${toolkit.tls.attacker.version}</version>
        </dependency>
        <dependency>
            <groupId>de.rub.nds.tls.dockerlib</groupId>
            <artifactId>tls-docker-library</artifactId>
            <version>${toolkit.tls.dockerlib.version}</version>
        </dependency>
        <dependency>
            <groupId>de.rub.nds.tls.scanner</groupId>
            <artifactId>tls-client-scanner</artifactId>
            <version>${toolkit.tls.scanner.version}</version>
        </dependency>
        <dependency>
            <groupId>de.rub.nds.tls.scanner</groupId>
            <artifactId>tls-scanner-core</artifactId>
            <version>${toolkit.tls.scanner.version}</version>
        </dependency>
        <dependency>
            <groupId>de.rub.nds.tls.scanner</groupId>
            <artifactId>tls-server-scanner</artifactId>
            <version>${toolkit.tls.scanner.version}</version>
        </dependency>
        <dependency>
            <groupId>jakarta.xml.bind</groupId>
            <artifactId>jakarta.xml.bind-api</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-api</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-core</artifactId>
        </dependency>
        <dependency>
            <groupId>org.bouncycastle</groupId>
            <artifactId>bcprov-jdk18on</artifactId>
        </dependency>
        <dependency>
            <groupId>org.glassfish.jaxb</groupId>
            <artifactId>jaxb-runtime</artifactId>
        </dependency>
        <dependency>
            <groupId>org.jsoup</groupId>
            <artifactId>jsoup</artifactId>
            <version>1.21.1</version>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-api</artifactId>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-engine</artifactId>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-params</artifactId>
        </dependency>
        <dependency>
            <groupId>org.junit.platform</groupId>
            <artifactId>junit-platform-commons</artifactId>
        </dependency>
        <dependency>
            <groupId>org.reflections</groupId>
            <artifactId>reflections</artifactId>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <!--################## clean lifecycle plugins ##################-->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-clean-plugin</artifactId>
            </plugin>
            <!--################# default lifecycle plugins #################-->
            <!-- Copy project resources to output directory -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
            </plugin>
            <!-- Compile source files -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
            </plugin>
            <!-- Execute unit tests -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
            </plugin>
            <!-- Build jar file -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
            </plugin>
            <!-- Compile javadoc -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-javadoc-plugin</artifactId>
            </plugin>
            <!-- Pack source files to jar archive -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-source-plugin</artifactId>
            </plugin>
            <!-- Execute integration tests -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-failsafe-plugin</artifactId>
            </plugin>
        </plugins>
    </build>

    <reporting>
        <plugins>
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <reportSets>
                    <reportSet>
                        <reports>
                            <report>report</report>
                        </reports>
                    </reportSet>
                </reportSets>
            </plugin>
        </plugins>
    </reporting>

    <profiles>
        <profile>
            <id>coverage</id>
            <build>
                <plugins>
                    <!-- Record test coverage with JaCoCo -->
                    <plugin>
                        <groupId>org.jacoco</groupId>
                        <artifactId>jacoco-maven-plugin</artifactId>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>
