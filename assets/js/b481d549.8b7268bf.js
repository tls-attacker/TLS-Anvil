"use strict";(self.webpackChunktls_anvil_docs=self.webpackChunktls_anvil_docs||[]).push([[404],{5225:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>a,contentTitle:()=>o,default:()=>h,frontMatter:()=>l,metadata:()=>r,toc:()=>c});const r=JSON.parse('{"id":"Advanced-Features/Profiles","title":"Profiles","description":"TLS-Anvil supports test selection through profiles, which allow you to restrict and organize the tests to be executed.","source":"@site/docs/03-Advanced-Features/02-Profiles.md","sourceDirName":"03-Advanced-Features","slug":"/Advanced-Features/Profiles","permalink":"/docs/Advanced-Features/Profiles","draft":false,"unlisted":false,"editUrl":"https://github.com/tls-attacker/TLS-Anvil/tree/main/Docs/docs/03-Advanced-Features/02-Profiles.md","tags":[],"version":"current","sidebarPosition":2,"frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Config Files","permalink":"/docs/Advanced-Features/Config-Files"},"next":{"title":"Compare with Expected Results","permalink":"/docs/Advanced-Features/Expected-Results"}}');var t=s(4848),i=s(8453);const l={},o="Profiles",a={},c=[{value:"Example Profile: <code>happyFlow.json</code>",id:"example-profile-happyflowjson",level:2},{value:"Using a Profile with TLS-Anvil",id:"using-a-profile-with-tls-anvil",level:2}];function d(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"profiles",children:"Profiles"})}),"\n",(0,t.jsxs)(n.p,{children:["TLS-Anvil supports test selection through ",(0,t.jsx)(n.strong,{children:"profiles"}),", which allow you to restrict and organize the tests to be executed."]}),"\n",(0,t.jsxs)(n.p,{children:["Profiles are defined in ",(0,t.jsx)(n.strong,{children:"JSON format"})," and specify:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["A ",(0,t.jsx)(n.strong,{children:"profile name"})]}),"\n",(0,t.jsxs)(n.li,{children:["Optional ",(0,t.jsx)(n.strong,{children:"references to sub-profiles"})]}),"\n",(0,t.jsxs)(n.li,{children:["A list of ",(0,t.jsx)(n.strong,{children:"test IDs"})," to include in the test run"]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["Test IDs can be found in the ",(0,t.jsx)(n.a,{href:"https://github.com/tls-attacker/TLS-Anvil/blob/main/TLS-Testsuite/src/main/resources/metadata.json",children:(0,t.jsx)(n.code,{children:"metadata.json"})})," file."]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsxs)(n.h2,{id:"example-profile-happyflowjson",children:["Example Profile: ",(0,t.jsx)(n.code,{children:"happyFlow.json"})]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",metastring:'showLineNumbers title="happyFlow.json"',children:'{\n  "name": "happyFlow",\n  "profiles": [],\n  "testIds": [\n    "5246-jsdAL1vDy5",\n    "8446-jVohiUKi4u"\n  ]\n}\n'})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Line 2:  The name of the profile"}),"\n",(0,t.jsx)(n.li,{children:"Line 3: A list of referenced sub-profiles (empty in this example) |"}),"\n",(0,t.jsx)(n.li,{children:"Line 4-6: The test IDs to execute (representing tests for TLS 1.2 and TLS 1.3 happy paths) |"}),"\n"]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"using-a-profile-with-tls-anvil",children:"Using a Profile with TLS-Anvil"}),"\n",(0,t.jsxs)(n.p,{children:["To use a profile, pass the ",(0,t.jsx)(n.code,{children:"-profiles"})," and ",(0,t.jsx)(n.code,{children:"-profileFolder"})," parameters. The ",(0,t.jsx)(n.code,{children:".json"})," extension is optional."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",metastring:'showLineNumbers title="Run with Profile"',children:"docker run \\\n    --rm \\\n    -it \\\n    --name tls-anvil \\\n    --network tls-anvil \\\n    -v $(pwd):/output/ \\\n    -v ./profiles/:/profiles/ \\\n    ghcr.io/tls-attacker/tlsanvil:latest \\\n    -parallelHandshakes 1 \\\n    -connectionTimeout 200 \\\n    -strength 1 \\\n    -identifier openssl-server \\\n    -profileFolder /profiles \\\n    -profiles happyFlow \\\n    server \\\n    -connect openssl-server:8443\n"})}),"\n",(0,t.jsx)(n.p,{children:"This command:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Mounts the ",(0,t.jsx)(n.code,{children:"profiles"})," directory"]}),"\n",(0,t.jsxs)(n.li,{children:["Selects the ",(0,t.jsx)(n.code,{children:"happyFlow"})," profile"]}),"\n",(0,t.jsxs)(n.li,{children:["Connects to the target TLS server at ",(0,t.jsx)(n.code,{children:"openssl-server:8443"})]}),"\n"]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsxs)(n.p,{children:["You can chain multiple profiles or build complex configurations by referencing other profiles inside the ",(0,t.jsx)(n.code,{children:"profiles"})," array. This supports modular and scalable test setups."]})]})}function h(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>l,x:()=>o});var r=s(6540);const t={},i=r.createContext(t);function l(e){const n=r.useContext(i);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:l(e.components),r.createElement(i.Provider,{value:n},e.children)}}}]);